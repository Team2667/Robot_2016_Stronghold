// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.team2667.stronghold.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.team2667.stronghold.Robot;

/**
 * Drive forward for two seconds
 * 
 * TODO: Implement gyro based drive straight correction
 */
public class Autonomous extends Command {

	private long initialTime;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Autonomous() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	initialTime = System.nanoTime() / 1000000L;
    	Robot.driveTrain.setMaxOutput(1.0);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
       	// Drive straight no gyro
    	Robot.driveTrain.getRobotDrive().drive(0.7, 0.3);
    	System.out.println(System.nanoTime() / 1000000 - initialTime);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	// Hard coded to run for 2 seconds
        return System.nanoTime() / 1000000 - initialTime >= 10000L;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.stop();
    	Robot.driveTrain.setMaxOutput(0.5);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
