// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.team2667.stronghold;

import org.team2667.stronghold.commands.DriveFast;
import org.team2667.stronghold.commands.DriveStraight;
import org.team2667.stronghold.commands.LowerArm;
import org.team2667.stronghold.commands.LowerShooter;
import org.team2667.stronghold.commands.RaiseArm;
import org.team2667.stronghold.commands.RaiseShooter;
import org.team2667.stronghold.commands.ShootBall;
import org.team2667.stronghold.commands.StartMotorsBackward;
import org.team2667.stronghold.commands.StartMotorsForward;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton shoot;
    public JoystickButton raise;
    public JoystickButton lower;
    public JoystickButton shooterForward;
    public JoystickButton shooterIntake;
    public JoystickButton driveFaster;
    public Joystick logitechController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton raiseArm;
    public JoystickButton lowerArm;
    
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        logitechController = new Joystick(0);
        
        driveFaster = new JoystickButton(logitechController, 1);
        driveFaster.whileHeld(new DriveFast());
        shooterIntake = new JoystickButton(logitechController, 8);
        shooterIntake.whileHeld(new StartMotorsBackward());
        shooterForward = new JoystickButton(logitechController, 6);
        shooterForward.whileHeld(new StartMotorsForward(-1L));
        lower = new JoystickButton(logitechController, 7);
        lower.whenPressed(new LowerShooter());
        raise = new JoystickButton(logitechController, 5);
        raise.whenPressed(new RaiseShooter());
        shoot = new JoystickButton(logitechController, 2);
        shoot.whenPressed(new ShootBall());


      

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        raiseArm = new JoystickButton(logitechController, 3);
        raiseArm.whileHeld(new RaiseArm());

        lowerArm = new JoystickButton(logitechController, 4);
        lowerArm.whileHeld(new LowerArm());
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getLogitechController() {
        return logitechController;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

